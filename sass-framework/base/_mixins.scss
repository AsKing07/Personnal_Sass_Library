@use '../base/functions' as *;
@use '../base/variables' as *;


// Commons styles for boutons
@mixin common-style-btn($bg-color, $text-color: white) {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: $spacer;
    width: 50% ;
    text-align: center;
    border-radius: $border-radius;
    border: $border-weight $bg-color !important;
    background-color: $bg-color;
    cursor: pointer;
    color: $text-color !important;
    transition: transform 0.3s ease-in-out;

    &:hover{
        transition: all ease-in-out 0.3s;
        transform: scale(1.05);
        background-color: darken($bg-color, 30%);
        color: $text-color;	

    }
    
    &:active {
        transform: translateY(4px) scale(1.05);
    }

    

}

// Définir les breakpoints
$breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px
);

@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    } @else {
        @error "Breakpoint #{$breakpoint} not found in map.";
    }
}

// Boucle pour générer les classes de marges
@for $i from 1 through 10 {
    .m-#{$i} {
        margin: calc($i * $spacer *2); 
    }
    .mt-#{$i} {
        margin-top: calc($i * $spacer *2); 
    }
    .mb-#{$i} {
        margin-bottom: calc($i * $spacer *2); 
    }
    .ml-#{$i} {
        margin-left: calc($i * $spacer *2); 
    }
    .mr-#{$i} {
        margin-right: calc($i * $spacer *2); 
    }
}

// Boucle pour générer les classes de padding
@for $i from 1 through 10 {
    .p-#{$i} {
        padding: calc($i * $spacer *2 ); 
    }
    .pl-#{$i} {
        padding-left: calc($i * $spacer *2); 
    }
    .pr-#{$i} {
        padding-right: calc($i * $spacer *2); 
    }
    .pt-#{$i} {
        padding-top: calc($i * $spacer *2); 
    }
    .pb-#{$i} {
        padding-bottom: calc($i * $spacer *2); 
    }
}

